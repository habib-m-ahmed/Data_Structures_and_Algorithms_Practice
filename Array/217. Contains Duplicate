class Solution {
    public boolean containsDuplicate(int[] nums) {
        
        //Using a HashSet over a HashMap since sets cannot contain duplicates and they have a faster lookup time (O(1) vs. O(n)).
        HashSet<Integer> set = new HashSet<Integer>();
        
        //iterating through nums array
        for(int i=0; i<nums.length; i++){
            
            
            //checking if set already has that element
            if(set.contains(nums[i])){
                return true;
            }
            
            //if set doesn't already contain that element then add it to the set
            else {
            
                set.add(nums[i]);
                
            }
            
        }
        
        return false;
        
    }
}

/*
Time complexity: O(n) because iterating through nums array 'n' times
Space complexity: O(n) because the space used by a hash table is linear with the number of elements in it
*/
