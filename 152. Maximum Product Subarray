class Solution {
    public int maxProduct(int[] nums) {
        
        
        if(nums.length==0){
            return 0;
        }
        
        int max = nums[0];
        int min = nums[0];
        int result = nums[0];
        
        //starting at 1 since we've already taken first element into account
        for(int i=1; i<nums.length; i++){
            
            //max keeping track of biggest number
            int temp_max = Math.max(max*nums[i], Math.max(min*nums[i], nums[i]));
            
            //min keeping track of smallest number
            min = Math.min(min*nums[i], Math.min(max*nums[i], nums[i]));
            
            max = temp_max;
            
            result = Math.max(result,max);
            
        }
        
        
        return result;
        
    }
}

/*
Time complexity: O(n)
Space complexity: O(1).
*/
