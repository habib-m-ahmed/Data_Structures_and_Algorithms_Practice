class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        
        int [] answer = new int [nums.length];
        
        //create 2 different loops one for the products of the elements on the left side of the number and 
        //then one for the right side of the number
        
        int [] productLeft = new int [nums.length];
        int [] productRight = new int [nums.length];
        
        
        productLeft[0] = 1;
        productRight[nums.length-1] = 1;
        
        //for the left side
        for(int i=1; i<nums.length; i++){
            productLeft[i] = productLeft[i-1] * nums[i-1];
        }
        
        
        for(int i=nums.length-2; i>=0; i--){
            productRight[i] = productRight[i+1] * nums[i+1];
        }
        
        for(int i=0; i<nums.length; i++){
            answer[i] = productLeft[i] * productRight[i];
        }
        
        
        return answer;
        
    }
}

/*
Time complexity: O(n) due to for loops.
Space complexity: O(n) due to two array variables being used
*/
